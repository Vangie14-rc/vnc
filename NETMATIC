"""
Author: [Vangie Coloma]
Date: 2025/05/15
Version: 1.1.0
Description:
Interactive quiz program made with the tkinter library
for the purpose of mathematics practice for young children at a primary school age.

ver.1.1.0
- Validity Checking
    - Special Letters (Symbols)
    - Blank/No Input
    - Boundaries
    - Alphabet/letters
"""
import random
from tkinter import *
from tkinter import PhotoImage

num = [1, 2, 3, 4, 5, 6, 7, 8, 9]


def create_error_window(text_error_message):
    error_window = Toplevel(app)
    error_window.title("Warning")
    error_window.geometry("250x150") # Set Window Size
    error_window.resizable(False, False) # Do not allow for window resize
    error_window_warning = Label (error_window, text="", fg="RED", font=("Comic Sans MS", 16)) 

    error_window_warning.config(text_error_message) #LOOK HERE!

    error_window_warning.place(relx=0.3, rely=0.1)

def input_validator(user_input):
    # Blanks
    if user_input == "":
        print("user input is blank")
        create_error_window("No Blanks!")   #LOOK HERE!
        
        warning = Label(app, text="NO BLANKS!", fg="RED", font=("Comic Sans MS", 16))
        warning.place(relx=0.3, rely=0.1)

       
    # Alphabet, Whitespace, and Symbols
    elif user_input.isdigit() == False:
        if user_input.isalnum() == True:
            print("Alphabet detected")
            warning = Label(app, text="NO LETTERS!", fg="RED", font=("Comic Sans MS", 16, "bold"))
            warning.place(relx=0.36, rely=0.1)
        elif " " in user_input:
            print("Whitespace Detected")
            warning = Label(app, text="NO WHITESPACE!", fg="RED", font=("Comic Sans MS", 16, "bold"))
            warning.place(relx=0.33, rely=0.1)
        else:  
            print("Symbols Detected")
            warning = Label(app, text="NO SYMBOLS!", fg="RED", font=("Comic Sans MS", 16, "bold"))
            warning.place(relx=0.36, rely=0.1)
                          
    # Boundaries (user input is more than)
    elif len(user_input) > 6:
        print("Character Limit is 6")

    else:   
         return True
    return False
    

def submt(user_entry):
   
    user_input = user_entry.get()
    
    input_validator(user_input)
   
    # Blanks
    if user_input == "":
        print("user input is blank")
        warning = Label(app, text="NO BLANKS!", fg="RED", font=("Comic Sans MS", 16))
        warning.place(relx=0.3, rely=0.1)

                          
    # Boundaries (user input is more than)
    elif len(user_input) > 6:
        print("Character Limit is 6")
   
    elif user_input == str(resultPLUS()):
        correct = Label(app, text="Correct!", fg="green", font=("Courier", 20))
        correct.place(relx=0.39, rely=0.24)
    else:
        wrong = Label(app, text="Wrong!!!", fg="red", font=("Courier", 20))
        wrong.place(relx=0.39, rely=0.24)
        print("Checks Done")
def try_again():
    try_again.num1update = random.choice(num)
    try_again.num2update = random.choice(num)
    newQ = Label(
        app, text=f"{try_again.num1update}+{try_again.num2update}", font=("Courier", 16)
    )
    newQ.place(relx=0.16, rely=0.14, relwidth=0.7, relheight=0.23)


def resultPLUS():
    try_again
    return try_again.num1update + try_again.num2update

app = Tk()
app.title("Math Quiz")

# Implimenting images the easy way
button_img = PhotoImage(file="court.png") 
cool_button = Button(app, image = button_img)

cool_label = Label(app, image = button_img)
cool_label.place(x=0, y=0, relwidth=1, relheight=1)


app.geometry("500x500") # Set Window Size
app.resizable(False, False) # Do not allow for window resize


# Start button
start = Button(app, text="Start", command=try_again)
start.place(relx=0.39, rely=0.24, relwidth=0.25, relheight=0.10)

# Entry text box
user_entry = Entry(app)
user_entry.place(relx=0.35, rely=0.4, relwidth=0.34, relheight=0.10)

# Code to submit answer
submit = Button(app, text="Submit", command=lambda: submt(user_entry))
submit.place(relx=0.39, rely=0.55, relwidth=0.25, relheight=0.10)

# Try again button
try_again = Button(app, text="Try Again", command=try_again)
try_again.place(relx=0.39, rely=0.7, relwidth=0.25, relheight=0.10)

app.mainloop()
